import { optimizeLodashImports } from "@optimize-lodash/rollup-plugin";
import babel from "@rollup/plugin-babel";
import commonjs from "@rollup/plugin-commonjs";
import { nodeResolve } from "@rollup/plugin-node-resolve";
import typescript from "@rollup/plugin-typescript";
import withSolid from "rollup-preset-solid";

const isProd = process.env.BUILD === "production";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/
`;

export default {
    input: "src/ObsidianTaskArchiverPlugin.ts",
    output: {
        file: "main.js",
        sourcemap: isProd ? false : "inline",
        format: "cjs",
        exports: "default",
        banner,
    },
    external: ["obsidian"],
    plugins: [
        typescript({
            noEmitOnError: true,
        }),
        nodeResolve({ browser: true }),
        commonjs(),
        babel({ extensions: [".tsx"], babelHelpers: "bundled" }),
        optimizeLodashImports(),
    ],
};
